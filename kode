library(WDI)
library(tidyverse)
library(ggplot2)

df_gdp_wdi <- WDI(
  country = "all",
  indicator = c('gdppc' = "NY.GDP.PCAP.PP.KD"),
  start = 2000,
  end = 2019,
  extra = TRUE
)

df_gdp <- df_gdp_wdi %>%
  mutate(year = as.numeric(year)) %>%
  filter(iso3c != "", income != "Aggregates") %>%
  drop_na(gdppc) %>%
  group_by(country, year) %>%
  slice(which.max(gdppc)) %>%
  ungroup()

df_gdp <- df_gdp %>%
  group_by(country) %>%
  filter(year == min(year)) %>%
  select(country, gdppc0 = gdppc) %>%
  left_join(df_gdp, by = c("country")) %>%
  ungroup()

df_gdp <- df_gdp %>%
  group_by(country) %>%
  mutate(
    gdpgrowth = (log(gdppc) - lag(log(gdppc))) * 100,
    avg_gdpgrowth = mean(gdpgrowth, na.rm = TRUE)
  ) %>%
  arrange(desc(year)) %>%
  slice(1) %>%
  select(-status,
         -lastupdated,
         -capital,
         -longitude,
         -latitude,
         -lending,
         -gdpgrowth) %>%
  ungroup()

df_edu_wdi <- WDI(
  country = "all",
  indicator = c('educ' = "BAR.SCHL.15UP"),
  start = 2000,
  end = 2019,
  extra = TRUE
)

df_edu <- df_edu_wdi %>%
  drop_na(educ) %>%
  mutate(educ = as.numeric(educ)) %>%
  select(country, iso2c, iso3c, year, educ, region, income) %>%
  group_by(iso3c) %>%
  mutate(avg_educ = mean(educ)) %>%
  ungroup() %>%
  select(-year,-educ) %>%
  distinct(country, .keep_all = TRUE)

df_nsy_wdi <- WDI(
  country = "all",
  indicator = c('nsy' = "NY.ADJ.NNAT.GN.ZS"),
  start = 2000,
  end = 2015,
  extra = TRUE
)

df_nsy <- df_nsy_wdi %>%
  select(country, region, income, iso2c, iso3c, year, nsy) %>%
  arrange(iso3c, year) %>%
  drop_na(nsy, iso3c, region) %>%
  filter(region != "Aggregates") %>%
  mutate(nsy = as.numeric(nsy, na.rm = TRUE)) %>%
  group_by(country) %>%
  mutate(avg_nsy = mean(nsy, na.rm = TRUE)) %>%
  select(-year,-nsy) %>%
  distinct(country, .keep_all = TRUE) %>%
  ungroup()

df_lf_wdi <- WDI(
  country = "all",
  indicator = c('lf' = "JI.TLF.TOTL"),
  start = 2000,
  end = 2019,
  extra = TRUE
)

df_lf <- df_lf_wdi %>%
  select(country, region, income, iso3c = iso2c, year, lf) %>%
  drop_na(lf) %>%
  filter(lf != 0) %>%
  group_by(iso3c) %>%
  arrange(year) %>%
  mutate(deltaYear = year - lag(year),
         growth = log(lf) - log(lag(lf))) %>%
  drop_na(deltaYear, growth) %>%
  mutate(n = growth / deltaYear, avg_n = mean(n, na.rm = TRUE)) %>%
  filter(year == max(year)) %>%
  ungroup()

df_rest_wdi <- WDI(
  country = "all",
  indicator = c(
    'poptot' = "SP.POP.TOTL",
    'gi' = "NE.GDI.FTOT.KD.ZG",
    'gx' = "NE.EXP.GNFS.KD.ZG",
    'nry' = "NY.ADJ.DRES.GN.ZS",
    'p' = "SP.POP.GROW"
  ),
  start = 2000,
  end = 2019,
  extra = TRUE
)

df_rest <- df_rest_wdi %>%
  drop_na(iso3c, gi, gx, nry) %>%
  filter(region != "Aggregates") %>%
  select(-longitude,
         -latitude,
         -capital,
         -lending,
         -status,
         -lastupdated) %>%
  group_by(iso3c) %>%
  mutate(
    avg_p = mean(p, na.rm = TRUE),
    avg_gi = mean(gi, na.rm = TRUE),
    avg_gx = mean(gx, na.rm = TRUE),
    avg_nry = mean(nry, na.rm = TRUE)
  ) %>%
  filter(year == max(year)) %>%
  ungroup(iso3c)

df_growth <-
  df_gdp %>%
  inner_join(select(df_edu, iso3c, avg_educ), by = "iso3c") %>%
  inner_join(select(df_nsy, iso3c, avg_nsy), by = "iso3c") %>%
  inner_join(select(df_lf, iso3c, avg_n), by = "iso3c") %>%
  inner_join(select(df_rest, iso3c, poptot, avg_p, avg_gi, avg_gx, avg_nry),
             by = "iso3c") %>%
  mutate(ln_gdppc0 = log(gdppc0),
         ln_gdppc = log(gdppc),
         avg_n = avg_n * 100) %>%
  select(-year)

# Velg ut de variabler du vil ha med i tabellen. Her er et eksempel (du skal ta med alle variabler som du har med i den empiriske analysen)
df <- subset(df_growth, select = c("avg_gdpgrowth","avg_n",  "avg_p", "avg_nsy", "avg_nry", "avg_gi", "avg_gx", "avg_educ", "ln_gdppc"))
# Gi beskrivende navn til variablene (i samme rekkefølge som de ligger i datasettet)
labs <- c("Gjennomsnittlig årlig vekstrate i BNP 2000-2019",
          "Gjennomsnittlig vekstrate i arbeidskraften", 
          "Gjennomsnittlig årlig befolkningsvekst",
          "Gjennomsnittlig andel netto",
          "Gjennomsnittlig årlig redukjsonsrate naturressurser" ,
          "Gjennomsnittlig årlig vekstrate i investeringer" ,
          "Gjennomsnittlig årlig vekstrate i eksport",
          "Gjennomsnittlig antall år utdanning", 
          "Log BNP per innbygger i 2019")

install.packages("summarytools")
library(summarytools)
suppressPackageStartupMessages(library(stargazer))
suppressPackageStartupMessages(library(vtable))

# Lag tabellen
st(df, labels=labs,
   summ = list(
     c('notNA(x)','mean(x)','sd(x)','min(x)','max(x)'), # Beskriv hvilken statistikk du ønsker å vise
     c('notNA(x)','mean(x)')
   ),
   summ.names = list(
     c('N','Gjennomsnitt','SD','Min','Maks') # Gi navn til kolumnene
   ))

suppressPackageStartupMessages(library(scales))

df_growth2019_n <- df_growth[complete.cases(df_growth$region,df_growth$poptot, df_growth$avg_p, df_growth$gdppc),] #Her tar jeg vekk land som mangler observasjoner. Dette gjør grafen penere.  


no_outliers <- subset(df, df$avg_gi > (Q1gi - 1.5*IQRgi) & df$avg_gi < (Q3gi + 1.5*IQRgi) &  df$avg_n > (Q1n - 1.5*IQRn) & df$avg_n < (Q3n + 1.5*IQRn))
dim(no_outliers)
#Befolkningsvekst vs BNP
library(ggplot2)
plot1 <- ggplot(df_growth2019_n, aes(x = avg_p , y = ln_gdppc)) +
  geom_point(aes(size = poptot, color = region), alpha = 0.8) +
  geom_smooth(method = "lm", se = FALSE, color = "black") +
  scale_x_continuous(breaks = c(-1, -0.5, 0, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5 )) +
  scale_y_continuous(trans = 'log2',
                     breaks = c(500, 2000, 8000, 32000, 120000)) +
  scale_size_area(guide = "none", max_size = 14) +
  scale_colour_manual(values = rainbow(9)) +
  xlab("Befolkningsvekst") +
  ylab("BNP per innbygger 2019") +
  ggtitle("Figur 1: Befolkningsvekst og BNP per innbygger 2019") +
  theme_minimal(base_size = 14, base_family = "Georgia") +
  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.background = element_rect(fill = 'white'),
        legend.text = element_text(size = 10, color = "black"))

plot1


#Sparing vs BNP
plot2 <- ggplot(df_growth2019_n, aes(x = avg_nsy , y = ln_gdppc)) +
  geom_point(aes(size = poptot, color = region), alpha = 0.8) +
  geom_smooth(method = "lm", se = FALSE, color = "black") +
  scale_x_continuous(breaks=c(-5,0,5,10,15,20,25))+
  scale_y_continuous(trans = 'log2', labels = dollar, breaks=c(500, 2000, 8000, 32000, 120000)) + 
  scale_size_area(guide = "none", max_size = 14) +
  scale_colour_manual(values = rainbow(9)) +
  xlab("Sparing som andel av BNI,netto") +
  ylab("BNP per innbygger 2019") +
  ggtitle("Figur 2: Sparing og BNP per innbygger 2019") +
  theme_minimal(base_size = 14, base_family = "Georgia") +
  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.background = element_rect(fill = 'white'),
        legend.text = element_text(size = 10, color = "black"))

plot2


# Utdanning og BNP
plot3 <- ggplot(df_growth2019_n, aes(x = avg_educ, y = ln_gdppc)) +
  geom_point(aes(size = poptot, color = region), alpha = 0.8) +
  geom_smooth(method = "lm", se = FALSE, color = "black") + 
  scale_x_continuous(breaks=c(0,2.5,5,7.5,10,12.5,15)) +
  scale_y_continuous(trans = 'log2',
                     breaks = c(500, 2000, 8000, 32000, 120000)) +
  scale_size_area(guide = "none", max_size = 14) +
  scale_colour_manual(values = rainbow(9)) +
  xlab("Gjennomsnittlig antall år i skole (befolkning 15+)") +
  ylab("BNP per innbygger 2019") +
  ggtitle("Figur 3: BNP per innbygger og utdanning") +
  theme_minimal(base_size = 14, base_family = "Georgia") +
  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.background = element_rect(fill = 'white'),
        legend.text = element_text(size = 10, color = "black"))

plot3

# sparing og vekstrate bnp per innbygger
plot4 <- ggplot(df_growth2019_n, aes(x = avg_nsy, y = avg_gdpgrowth)) +
  geom_point(aes(size = poptot, color = region), alpha = 0.8) +
  geom_smooth(method = "lm", se = FALSE, color = "black") + 
  scale_x_continuous(breaks=c(-5,0,5,10,15,20,25))  +
  scale_y_continuous(trans = 'log2',
                     breaks = c(500, 2000, 8000, 32000, 120000)) +
  scale_size_area(guide = "none", max_size = 14) +
  scale_colour_manual(values = rainbow(9)) +
  xlab("Sparing") +
  ylab("Vekstrate i BNP per innbygger") +
  ggtitle("Figur 4: Vekstrate og Sparing") +
  theme_minimal(base_size = 14, base_family = "Georgia") +
  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.background = element_rect(fill = 'white'),
        legend.text = element_text(size = 10, color = "black"))

plot4



plot5 <- ggplot(df_growth2019_n, aes(x = avg_educ, y = avg_gdpgrowth)) +
  geom_point(aes(size = poptot, color = region), alpha = 0.8) +
  geom_smooth(method = "lm", se = FALSE, color = "black") + 
  scale_x_continuous(breaks=c(0,2.5,5,7.5,10,12.5,15)) +
  scale_y_continuous(trans = 'log2',
                     breaks = c(500, 2000, 8000, 32000, 120000)) +
  scale_size_area(guide = "none", max_size = 14) +
  scale_colour_manual(values = rainbow(9)) +
  xlab("Gjennomsnittlig antall år i skole(befolkning 15+)") +
  ylab("Vekstratee i BNP per innbygger") +
  ggtitle("Figur 5: Vekstrate i BNP per innbygger og Utdanning") +
  theme_minimal(base_size = 14, base_family = "Georgia") +
  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.background = element_rect(fill = 'white'),
        legend.text = element_text(size = 10, color = "black"))

plot5

suppressPackageStartupMessages(library(sjPlot))
suppressPackageStartupMessages(library(sjmisc))
suppressPackageStartupMessages(library(sjlabelled))

model1 <- lm(ln_gdppc0  ~ avg_nsy + avg_educ + avg_n + avg_p + avg_nry + avg_gi + avg_gx, data= df_growth)
summary_table <- summary(model1)$coefficients
tab_model(model1)

df <- df_growth[complete.cases( df_growth$avg_gi, df_growth$avg_n),]

Q1gi <- quantile(df$avg_gi, .25 )
Q3gi <- quantile(df$avg_gi, .75)
IQRgi <- IQR(df$avg_gi)

Q1n <- quantile(df$avg_n, .25 )
Q3n <- quantile(df$avg_n, .75)
IQRn <- IQR(df$avg_n)

no_outliers <- subset(df, df$avg_gi > (Q1gi - 1.5*IQRgi) & df$avg_gi < (Q3gi + 1.5*IQRgi) &  df$avg_n > (Q1n - 1.5*IQRn) & df$avg_n < (Q3n + 1.5*IQRn))
dim(no_outliers)

data <- WDI(country = "all", indicator = c("gdppc", "nsy", "poptot", "lf", "p", "educ", "gi", "gx", "nry"), start = 2010, end = 2020)
data_table <- as.data.frame(data)
summary(data_table)
